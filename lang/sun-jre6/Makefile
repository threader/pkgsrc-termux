# $NetBSD: Makefile,v 1.45 2016/03/10 19:20:15 jperkin Exp $

# Note: Regen distinfo with PKG_DEFAULT_OPTIONS+=sun-jre-jce
# Note: Update DOWNLOAD_NAME when you update the JRE version

DISTNAME=	jre-6u45-${DIST_OS}-${DIST_ARCH}
PKGNAME=	sun-jre6-6.0.45
PKGREVISION=	1
MASTER_SITES=	# empty

LICENSE=	sun-jre6-license

DOWNLOAD_NAME=	Java Runtime Environment (JRE) 6u45

USE_TOOLS+=	pax

WRKSRC=		${WRKDIR}/jre1.6.0_45
JAVA_WRAPPERS=	java javaws keytool orbd policytool rmid rmiregistry \
		servertool tnameserv
REQD_DIRS=	${JAVA_HOME}
REQD_DIRS+=	${JAVA_HOME}/lib
REQD_DIRS+=	${JAVA_HOME}/lib/applet
REQD_DIRS+=	${JAVA_HOME}/lib/images
REQD_DIRS+=	${JAVA_HOME}/lib/images/cursors
REQD_DIRS+=	${JAVA_HOME}/lib/security
CONF_FILES=	# empty

.include "../../lang/sun-jre6/Makefile.common"

.sinclude "sfiles-${DIST_OS}-${EMUL_ARCH}.mk"

# The 64-bit Solaris downloads for some inexplicable reason only contain
# the additional 64-bit files, and you need the main 32-bit file too.
.if ${OPSYS} == "SunOS" && ${MACHINE_ARCH} == "x86_64"
DISTFILES=	${DEFAULT_DISTFILES} ${DEFAULT_DISTFILES:S/x64/i586/}
.endif

.for file in ${SFILES}
CONF_FILES+=	${JAVA_HOME}/lib/${file}.default ${JAVA_HOME}/lib/${file}
.endfor

CHECK_FILES_SKIP+=	${JAVA_HOME}/lib/${JAVA_ARCH}/client/classes.jsa

PKG_OPTIONS_VAR=	PKG_OPTIONS.sun-jre6
PKG_SUPPORTED_OPTIONS=	sun-jre-jce

.include "../../mk/bsd.options.mk"

PLIST_SRC=	PLIST.${DIST_OS}-${EMUL_ARCH}

PLIST_VARS+=	jce native
.if !empty(PKG_OPTIONS:Msun-jre-jce)
DISTFILES=	${DISTNAME}${EXTRACT_SUFX} jce_policy-6.zip
PLIST.jce=	yes
.endif

# Some of the binaries require libX11, so ensure that requirement is
# satisfied when the package is installed on the native OS.
#
.if defined(EMUL_IS_NATIVE)
.  if ${X11_TYPE} == "native"
X11_LIBDIR=	${X11BASE}/lib${LIBABISUFFIX}
.    if !exists(${X11_LIBDIR}/libX11.so.6)
PKG_FAIL_REASON+=	"${LIBX11} does not exist.  Please install the" \
			"X11 library packages for your system."
.    endif
.  else
.  include "../../x11/libX11/buildlink3.mk"
.  include "../../x11/libXext/buildlink3.mk"
.  include "../../x11/libXi/buildlink3.mk"
.  include "../../x11/libXt/buildlink3.mk"
.  include "../../x11/libXtst/buildlink3.mk"
X11_LIBDIR=	${X11BASE}/lib
.  endif

.  include "../../audio/alsa-lib/buildlink3.mk"
ALSA_LIBDIR=	${BUILDLINK_PREFIX.alsa-lib}/${BUILDLINK_LIBDIRS.alsa-lib}

.  include "../../databases/unixodbc/buildlink3.mk"
ODBC_LIBDIR=	${BUILDLINK_PREFIX.unixodbc}/${BUILDLINK_LIBDIRS.unixodbc}

ARCH_LIBDIR=	${JAVA_HOME}/lib/${JAVA_ARCH}
.PHONY: create-library-symlinks
post-install: create-library-symlinks
create-library-symlinks:
	${RUN}${LN} -fs ${X11_LIBDIR}/libX11.so.6 ${DESTDIR}${ARCH_LIBDIR}
	${RUN}${LN} -fs ${X11_LIBDIR}/libX11.so.6 ${DESTDIR}${ARCH_LIBDIR}/jli
	${RUN}${LN} -fs ${X11_LIBDIR}/libXext.so.6 ${DESTDIR}${ARCH_LIBDIR}
	${RUN}${LN} -fs ${X11_LIBDIR}/libXi.so.6 ${DESTDIR}${ARCH_LIBDIR}
	${RUN}${LN} -fs ${X11_LIBDIR}/libXt.so.6 ${DESTDIR}${ARCH_LIBDIR}
	${RUN}${LN} -fs ${X11_LIBDIR}/libXtst.so.6 ${DESTDIR}${ARCH_LIBDIR}
	${RUN}${LN} -fs ${ALSA_LIBDIR}/libasound.so.2 ${DESTDIR}${ARCH_LIBDIR}
	${RUN}${LN} -fs ${ODBC_LIBDIR}/libodbc.so ${DESTDIR}${ARCH_LIBDIR}
	${RUN}${LN} -fs ${ODBC_LIBDIR}/libodbcinst.so ${DESTDIR}${ARCH_LIBDIR}

PLIST.native=	yes
.endif


post-extract:
	${MKDIR} ${WRKSRC}/.systemPrefs
	${TOUCH} ${WRKSRC}/.systemPrefs/.system.lock
	${TOUCH} ${WRKSRC}/.systemPrefs/.systemRootModFile

do-configure:
	cd ${WRKSRC}/lib; for file in ${SFILES}; do			\
		${MV} -f $$file $$file.default;				\
	done

pre-install:
	# This file is generated the *first* time the package is built on a box
	${RM} -f ${WRKSRC}/lib/servicetag/registration.xml
.if !empty(PKG_OPTIONS:Msun-jre-jce)
	cd ${WRKDIR}/jce ; pax -rw -pe -v . ${WRKSRC}/lib/security
.endif

#
# re-create sfiles.mk from properties and config files
#
makesfiles:
	${ECHO} >  sfiles-${DIST_OS}-${MACHINE_ARCH}.mk '#	$$Net''BSD$$'
	${ECHO} >> sfiles-${DIST_OS}-${MACHINE_ARCH}.mk '#'
	${ECHO} >> sfiles-${DIST_OS}-${MACHINE_ARCH}.mk '# Created with "make makesfiles"'
	${ECHO} >> sfiles-${DIST_OS}-${MACHINE_ARCH}.mk '# Do not edit this file manually!'
	${ECHO} >> sfiles-${DIST_OS}-${MACHINE_ARCH}.mk '#'
	cd ${WRKSRC}/lib && ${FIND} * -name fontconfig.\* -o		\
		-name \*.properties -o -name \*.properties.\?\? -o	\
		-name \*.cfg -o -name \*.security |			\
	${SED} 's/^/SFILES+=	/' >> ${PKGDIR}/sfiles-${DIST_OS}-${MACHINE_ARCH}.mk

.include "../../mk/bsd.pkg.mk"
