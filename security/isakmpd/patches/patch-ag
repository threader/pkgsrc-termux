$NetBSD: patch-ag,v 1.2 2013/09/20 23:07:44 joerg Exp $

--- sa.c.orig	2003-07-25 08:31:16.000000000 +0000
+++ sa.c
@@ -435,8 +435,8 @@ sa_dump (int cls, int level, char *heade
 	    decode_32 (sa->cookies + 8), decode_32 (sa->cookies + 12)));
   LOG_DBG ((cls, level, "%s: msgid %08x refcnt %d", header,
 	    decode_32 (sa->message_id), sa->refcnt));
-  LOG_DBG ((cls, level, "%s: life secs %llu kb %llu", header, sa->seconds,
-	    sa->kilobytes));
+  LOG_DBG ((cls, level, "%s: life secs %llu kb %llu", header, (long long unsigned) sa->seconds,
+	    (long long unsigned) sa->kilobytes));
   for (proto = TAILQ_FIRST (&sa->protos); proto;
        proto = TAILQ_NEXT (proto, link))
     {
@@ -659,7 +659,7 @@ sa_dump_all (FILE *fd, struct sa *sa)
   fprintf (fd, " (Phase %d)\n", sa->phase);
 
   /* Source and destination IPs. */
-  fprintf (fd, sa->transport == NULL ? "<no transport>" :
+  fprintf (fd, "%s", sa->transport == NULL ? "<no transport>" :
 	   sa->transport->vtbl->decode_ids (sa->transport));
   fprintf (fd, "\n");
 
@@ -1086,7 +1086,7 @@ sa_setup_expirations (struct sa *sa)
       seconds = sa->seconds * (850 + sysdep_random () % 100) / 1000;
       LOG_DBG ((LOG_TIMER, 95,
 		"sa_setup_expirations: SA %p soft timeout in %llu seconds",
-		sa, seconds));
+		sa, (long long unsigned) seconds));
       expiration.tv_sec += seconds;
       sa->soft_death
 	= timer_add_event ("sa_soft_expire", sa_soft_expire, sa, &expiration);
@@ -1104,7 +1104,7 @@ sa_setup_expirations (struct sa *sa)
       gettimeofday (&expiration, 0);
       LOG_DBG ((LOG_TIMER, 95,
 		"sa_setup_expirations: SA %p hard timeout in %llu seconds",
-		sa, sa->seconds));
+		sa, (long long unsigned) sa->seconds));
       expiration.tv_sec += sa->seconds;
       sa->death
 	= timer_add_event ("sa_hard_expire", sa_hard_expire, sa, &expiration);
