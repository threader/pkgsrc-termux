$NetBSD: patch-bd,v 1.2 2013/01/30 10:21:22 wiz Exp $

--- pixman/pixman.h.orig	2012-12-10 11:34:13.000000000 +0000
+++ pixman/pixman.h
@@ -856,25 +856,19 @@ void          pixman_image_composite32  
 					       int32_t            width,
 					       int32_t            height);
 
-/* Executive Summary: This function is a no-op that only exists
- * for historical reasons.
- *
- * There used to be a bug in the X server where it would rely on
- * out-of-bounds accesses when it was asked to composite with a
- * window as the source. It would create a pixman image pointing
- * to some bogus position in memory, but then set a clip region
- * to the position where the actual bits were.
+/* Old X servers rely on out-of-bounds accesses when they are asked
+ * to composite with a window as the source. They create a pixman image
+ * pointing to some bogus position in memory, but then they set a clip
+ * region to the position where the actual bits are.
  *
  * Due to a bug in old versions of pixman, where it would not clip
  * against the image bounds when a clip region was set, this would
- * actually work. So when the pixman bug was fixed, a workaround was
- * added to allow certain out-of-bound accesses. This function disabled
- * those workarounds.
+ * actually work. So by default we allow certain out-of-bound access
+ * to happen unless explicitly disabled.
  *
- * Since 0.21.2, pixman doesn't do these workarounds anymore, so now this
- * function is a no-op.
+ * Fixed X servers should call this function to disable the workaround.
  */
-void pixman_disable_out_of_bounds_workaround (void);
+void          pixman_disable_out_of_bounds_workaround (void);
 
 /*
  * Glyphs
