# $NetBSD: qmake.conf.mac,v 1.2 2012/01/12 22:59:58 adam Exp $
#
# qmake configuration for PkgSrc on Mac OS X

MAKEFILE_GENERATOR	= UNIX
TARGET_PLATFORM		= macx
TEMPLATE		= app
CONFIG			+= qt warn_on release link_prl incremental global_init_link_order lib_version_first plugin_no_soname
QT			+= core gui

QMAKE_COMPILER_DEFINES	= __APPLE__ __GNUC__

QMAKE_CC		= @CC@
QMAKE_LEX		= @LEX@
QMAKE_LEXFLAGS		= 
QMAKE_YACC		= @YACC@
QMAKE_YACCFLAGS		= -d
QMAKE_CFLAGS		= @CFLAGS@
QMAKE_CFLAGS_DEPS	= -M
QMAKE_CFLAGS_WARN_ON	= 
QMAKE_CFLAGS_WARN_OFF	=
QMAKE_CFLAGS_RELEASE	=
QMAKE_CFLAGS_DEBUG	= -g
QMAKE_CFLAGS_SHLIB	= -fPIC
QMAKE_CFLAGS_STATIC_LIB	= $$QMAKE_CFLAGS_SHLIB
QMAKE_CFLAGS_YACC	= -Wno-unused -Wno-parentheses
QMAKE_CFLAGS_THREAD	= -D_REENTRANT

QMAKE_CXX		= @CXX@
QMAKE_CXXFLAGS		= @CXXFLAGS@ -DQ_TRAILING_DIR_SEP
QMAKE_CXXFLAGS_DEPS	= $$QMAKE_CFLAGS_DEPS
QMAKE_CXXFLAGS_WARN_ON	= $$QMAKE_CFLAGS_WARN_ON
QMAKE_CXXFLAGS_WARN_OFF	= $$QMAKE_CFLAGS_WARN_OFF
QMAKE_CXXFLAGS_RELEASE	= $$QMAKE_CFLAGS_RELEASE
QMAKE_CXXFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
QMAKE_CXXFLAGS_SHLIB	= $$QMAKE_CFLAGS_SHLIB
QMAKE_CXXFLAGS_STATIC_LIB = $$QMAKE_CFLAGS_STATIC_LIB
QMAKE_CXXFLAGS_YACC	= $$QMAKE_CFLAGS_YACC
QMAKE_CXXFLAGS_THREAD	= $$QMAKE_CFLAGS_THREAD

QMAKE_OBJECTIVE_CFLAGS	= @CFLAGS@

QMAKE_INCDIR		= @LOCALBASE@/include
QMAKE_LIBDIR		= @LOCALBASE@/lib
QMAKE_INCDIR_QT		= $(QTDIR)/include
QMAKE_LIBDIR_QT		= $(QTDIR)/lib
QMAKE_INCDIR_OPENGL	= /System/Library/Frameworks/OpenGL.framework/Headers \
			  /System/Library/Frameworks/AGL.framework/Headers

QMAKE_LINK		= @CXX@
QMAKE_LINK_SHLIB	= @CXX@
QMAKE_LINK_C		= @CC@
QMAKE_LINK_C_SHLIB	= @CC@
QMAKE_LINK_SHLIB_CMD	= $$QMAKE_LINK_SHLIB $$QMAKE_LFLAGS_SHLIB $(LFLAGS) $$QMAKE_LFLAGS -o $(TARGETD) $(OBJECTS) $(OBJMOC) $(LIBS)
QMAKE_LFLAGS		= $(LDFLAGS) -L$(QTDIR)/lib
QMAKE_LFLAGS_RELEASE	=
QMAKE_LFLAGS_DEBUG	=
QMAKE_LFLAGS_SHLIB	= -single_module -dynamiclib
QMAKE_LFLAGS_PLUGIN	= $$QMAKE_LFLAGS_SHLIB
QMAKE_LFLAGS_SONAME	= -install_name$${LITERAL_WHITESPACE}
QMAKE_LFLAGS_THREAD	= @PTHREAD_LDFLAGS@
QMAKE_LFLAGS_NOUNDEF	=
QMAKE_LFLAGS_RPATH	= @COMPILER_RPATH_FLAG@
QMAKE_LFLAGS_INCREMENTAL= -undefined suppress -flat_namespace
QMAKE_LFLAGS_VERSION	= -current_version$${LITERAL_WHITESPACE}
QMAKE_LFLAGS_COMPAT_VERSION=-compatibility_version$${LITERAL_WHITESPACE}
# -all_load requred to make Objective-C categories work in static builds.
QMAKE_LFLAGS_STATIC_LIB	= -all_load

QMAKE_FIX_RPATH         = install_name_tool -id
QMAKE_EXTENSION_SHLIB   = dylib

QMAKE_LIBS		=
QMAKE_LIBS_DYNLOAD	= 
QMAKE_LIBS_THREAD	=
QMAKE_LIBS_OPENGL       = -framework OpenGL -framework AGL
QMAKE_LIBS_OPENGL_QT    = $$QMAKE_LIBS_OPENGL

QMAKE_MOC		= $(QTDIR)/bin/moc
QMAKE_UIC		= $(QTDIR)/bin/uic
QMAKE_UIC3		= $(QTDIR)/bin/uic3
QMAKE_RCC		= $(QTDIR)/bin/rcc

QMAKE_AR		= @AR@ cq
#QMAKE_OBJCOPY		= objcopy
QMAKE_RANLIB		= @QMAKE_RANLIB@

QMAKE_TAR		= tar -cf
QMAKE_GZIP		= gzip -9f

QMAKE_COPY		= cp -f
QMAKE_COPY_FILE		= $$QMAKE_COPY
QMAKE_COPY_DIR		= $$QMAKE_COPY -R
QMAKE_MOVE		= mv -f
QMAKE_DEL_FILE		= rm -f
QMAKE_DEL_DIR		= rmdir
QMAKE_CHK_DIR_EXISTS	= test -d
QMAKE_MKDIR		= @MKDIR@
include(../common/unix.conf)
load(qt_config)
