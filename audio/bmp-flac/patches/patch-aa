$NetBSD: patch-aa,v 1.1.1.1 2009/11/24 16:04:50 kefren Exp $
--- configure.orig	2006-11-27 08:41:51.000000000 +0200
+++ configure	2009-11-24 17:40:41.000000000 +0200
@@ -21246,229 +21246,18 @@
 if test "x$enable_xmms_plugin" != xfalse ; then
 
 
-# Check whether --with-xmms-prefix or --without-xmms-prefix was given.
-if test "${with_xmms_prefix+set}" = set; then
-  withval="$with_xmms_prefix"
-  xmms_config_prefix="$withval"
-else
   xmms_config_prefix=""
-fi;
 
-# Check whether --with-xmms-exec-prefix or --without-xmms-exec-prefix was given.
-if test "${with_xmms_exec_prefix+set}" = set; then
-  withval="$with_xmms_exec_prefix"
-  xmms_config_exec_prefix="$withval"
-else
   xmms_config_exec_prefix=""
-fi;
-
-if test x$xmms_config_exec_prefix != x; then
-    xmms_config_args="$xmms_config_args --exec-prefix=$xmms_config_exec_prefix"
-    if test x${XMMS_CONFIG+set} != xset; then
-	XMMS_CONFIG=$xmms_config_exec_prefix/bin/xmms-config
-    fi
-fi
-
-if test x$xmms_config_prefix != x; then
-    xmms_config_args="$xmms_config_args --prefix=$xmms_config_prefix"
-    if test x${XMMS_CONFIG+set} != xset; then
-  	XMMS_CONFIG=$xmms_config_prefix/bin/xmms-config
-    fi
-fi
-
-# Extract the first word of "xmms-config", so it can be a program name with args.
-set dummy xmms-config; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
-if test "${ac_cv_path_XMMS_CONFIG+set}" = set; then
-  echo $ECHO_N "(cached) $ECHO_C" >&6
-else
-  case $XMMS_CONFIG in
-  [\\/]* | ?:[\\/]*)
-  ac_cv_path_XMMS_CONFIG="$XMMS_CONFIG" # Let the user override the test with a path.
-  ;;
-  *)
-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-  for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-    ac_cv_path_XMMS_CONFIG="$as_dir/$ac_word$ac_exec_ext"
-    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-done
-
-  test -z "$ac_cv_path_XMMS_CONFIG" && ac_cv_path_XMMS_CONFIG="no"
-  ;;
-esac
-fi
-XMMS_CONFIG=$ac_cv_path_XMMS_CONFIG
-
-if test -n "$XMMS_CONFIG"; then
-  echo "$as_me:$LINENO: result: $XMMS_CONFIG" >&5
-echo "${ECHO_T}$XMMS_CONFIG" >&6
-else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
-fi
-
-min_xmms_version=0.9.5.1
-
-if test "$XMMS_CONFIG" = "no"; then
-    no_xmms=yes
-else
-    XMMS_CFLAGS=`$XMMS_CONFIG $xmms_config_args --cflags`
-    XMMS_LIBS=`$XMMS_CONFIG $xmms_config_args --libs`
-    XMMS_VERSION=`$XMMS_CONFIG $xmms_config_args --version`
-    XMMS_DATA_DIR=`$XMMS_CONFIG $xmms_config_args --data-dir`
-    XMMS_PLUGIN_DIR=`$XMMS_CONFIG $xmms_config_args --plugin-dir`
-    XMMS_VISUALIZATION_PLUGIN_DIR=`$XMMS_CONFIG $xmms_config_args \
-					--visualization-plugin-dir`
-    XMMS_INPUT_PLUGIN_DIR=`$XMMS_CONFIG $xmms_config_args --input-plugin-dir`
-    XMMS_OUTPUT_PLUGIN_DIR=`$XMMS_CONFIG $xmms_config_args --output-plugin-dir`
-    XMMS_EFFECT_PLUGIN_DIR=`$XMMS_CONFIG $xmms_config_args --effect-plugin-dir`
-    XMMS_GENERAL_PLUGIN_DIR=`$XMMS_CONFIG $xmms_config_args --general-plugin-dir`
-
-
-
-# Determine which version number is greater. Prints 2 to stdout if
-# the second number is greater, 1 if the first number is greater,
-# 0 if the numbers are equal.
-
-# Written 15 December 1999 by Ben Gertzfield <che@debian.org>
-# Revised 15 December 1999 by Jim Monty <monty@primenet.com>
-
-    for ac_prog in gawk mawk nawk awk
-do
-  # Extract the first word of "$ac_prog", so it can be a program name with args.
-set dummy $ac_prog; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
-if test "${ac_cv_prog_AWK+set}" = set; then
-  echo $ECHO_N "(cached) $ECHO_C" >&6
-else
-  if test -n "$AWK"; then
-  ac_cv_prog_AWK="$AWK" # Let the user override the test.
-else
-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-  for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-    ac_cv_prog_AWK="$ac_prog"
-    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-done
-
-fi
-fi
-AWK=$ac_cv_prog_AWK
-if test -n "$AWK"; then
-  echo "$as_me:$LINENO: result: $AWK" >&5
-echo "${ECHO_T}$AWK" >&6
-else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
-fi
-
-  test -n "$AWK" && break
-done
 
-    xmms_got_version=` $AWK '						\
-BEGIN {									\
-    print vercmp(ARGV[1], ARGV[2]);					\
-}									\
-									\
-function vercmp(ver1, ver2,    ver1arr, ver2arr,			\
-                               ver1len, ver2len,			\
-                               ver1int, ver2int, len, i, p) {		\
-									\
-    ver1len = split(ver1, ver1arr, /\./);				\
-    ver2len = split(ver2, ver2arr, /\./);				\
-									\
-    len = ver1len > ver2len ? ver1len : ver2len;			\
-									\
-    for (i = 1; i <= len; i++) {					\
-        p = 1000 ^ (len - i);						\
-        ver1int += ver1arr[i] * p;					\
-        ver2int += ver2arr[i] * p;					\
-    }									\
-									\
-    if (ver1int < ver2int)						\
-        return 2;							\
-    else if (ver1int > ver2int)						\
-        return 1;							\
-    else								\
-        return 0;							\
-}' $XMMS_VERSION $min_xmms_version`
-
-    if test $xmms_got_version -eq 2; then 	# failure
-	no_xmms=version
-    else  					# success!
-	:
-    fi
 
-fi
-
-echo "$as_me:$LINENO: checking for XMMS - version >= $min_xmms_version" >&5
-echo $ECHO_N "checking for XMMS - version >= $min_xmms_version... $ECHO_C" >&6
-
-if test "x$no_xmms" = x; then
-    echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-    :
-else
-    echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
-
-    if test "$XMMS_CONFIG" = "no" ; then
-	echo "*** The xmms-config script installed by XMMS could not be found."
-      	echo "*** If XMMS was installed in PREFIX, make sure PREFIX/bin is in"
-	echo "*** your path, or set the XMMS_CONFIG environment variable to the"
-	echo "*** full path to xmms-config."
-    else
-	if test "$no_xmms" = "version"; then
-	    echo "*** An old version of XMMS, $XMMS_VERSION, was found."
-	    echo "*** You need a version of XMMS newer than $min_xmms_version."
-	    echo "*** The latest version of XMMS is always available from"
-	    echo "*** http://www.xmms.org/"
-	    echo "***"
-
-            echo "*** If you have already installed a sufficiently new version, this error"
-            echo "*** probably means that the wrong copy of the xmms-config shell script is"
-            echo "*** being found. The easiest way to fix this is to remove the old version"
-            echo "*** of XMMS, but you can also set the XMMS_CONFIG environment to point to the"
-            echo "*** correct copy of xmms-config. (In this case, you will have to"
-            echo "*** modify your LD_LIBRARY_PATH enviroment variable, or edit /etc/ld.so.conf"
-            echo "*** so that the correct libraries are found at run-time)"
-	fi
-    fi
-    XMMS_CFLAGS=""
-    XMMS_LIBS=""
-    { echo "$as_me:$LINENO: WARNING: *** XMMS >= 0.9.5.1 not installed - XMMS support will not be built" >&5
-echo "$as_me: WARNING: *** XMMS >= 0.9.5.1 not installed - XMMS support will not be built" >&2;}
-fi
-
-
-
-
-
-
-
-
-
-
-
-fi
+    XMMS_CFLAGS=`$PKG_CONFIG bmp --cflags`
+    XMMS_LIBS=`$PKG_CONFIG bmp  --libs`
+    XMMS_PLUGIN_DIR="$PREFIX/lib/bmp"
+    XMMS_INPUT_PLUGIN_DIR="$PREFIX/lib/bmp/Input"
+    XMMS_OUTPUT_PLUGIN_DIR="$PREFIX/lib/bmp/Output"
 
+echo BMP plugin path... $XMMS_INPUT_PLUGIN_DIR
 
 if test -n "$XMMS_INPUT_PLUGIN_DIR"; then
   FLaC__HAS_XMMS_TRUE=
@@ -21478,7 +21267,7 @@
   FLaC__HAS_XMMS_FALSE=
 fi
 
-
+fi
 
 # Check whether --with-ogg or --without-ogg was given.
 if test "${with_ogg+set}" = set; then
