$NetBSD: patch-aa,v 1.1 2013/11/16 07:41:00 mef Exp $
#
# (1) craft FPBIT_FUNCS and DPBIT_FUNCS lists to avoid routine collision
# against NetBSD softfloat implementation. Following twelve are to
# be eliminated;
#	_addsub_df.o _addsub_sf.o _df_to_sf.o _df_to_si.o
#	_div_df.o _div_sf.o _mul_df.o _mul_sf.o _sf_to_df.o _sf_to_si.o
#	_si_to_df.o _si_to_sf.o
# (2) To swith with and without documents, put @@VAR@@ type words. 

--- gcc/Makefile.in.orig	2013-06-14 06:32:52.000000000 +0900
+++ gcc/Makefile.in	2013-10-22 18:50:44.000000000 +0900
@@ -1062,15 +1062,15 @@ LIBGCOV = _gcov _gcov_merge_add _gcov_me
     _gcov_execv _gcov_execvp _gcov_execve \
     _gcov_interval_profiler _gcov_pow2_profiler _gcov_one_value_profiler
 
-FPBIT_FUNCS = _pack_sf _unpack_sf _addsub_sf _mul_sf _div_sf \
+FPBIT_FUNCS = _pack_sf _unpack_sf 	     	    	     \
     _fpcmp_parts_sf _compare_sf _eq_sf _ne_sf _gt_sf _ge_sf \
-    _lt_sf _le_sf _unord_sf _si_to_sf _sf_to_si _negate_sf _make_sf \
-    _sf_to_df _sf_to_tf _thenan_sf _sf_to_usi _usi_to_sf
+    _lt_sf _le_sf _unord_sf 	      	        _negate_sf _make_sf \
+              _sf_to_tf _thenan_sf _sf_to_usi _usi_to_sf
 
-DPBIT_FUNCS = _pack_df _unpack_df _addsub_df _mul_df _div_df \
+DPBIT_FUNCS = _pack_df _unpack_df			     \
     _fpcmp_parts_df _compare_df _eq_df _ne_df _gt_df _ge_df \
-    _lt_df _le_df _unord_df _si_to_df _df_to_si _negate_df _make_df \
-    _df_to_sf _df_to_tf _thenan_df _df_to_usi _usi_to_df
+    _lt_df _le_df _unord_df		        _negate_df _make_df \
+              _df_to_tf _thenan_df _df_to_usi _usi_to_df
 
 TPBIT_FUNCS = _pack_tf _unpack_tf _addsub_tf _mul_tf _div_tf \
     _fpcmp_parts_tf _compare_tf _eq_tf _ne_tf _gt_tf _ge_tf \
@@ -1216,7 +1216,7 @@
 all.internal: start.encap rest.encap doc
 # This is what to compile if making a cross-compiler.
 all.cross: native gcc-cross cpp$(exeext) specs \
-	$(LIBGCC) $(EXTRA_PARTS) lang.all.cross doc @GENINSRC@ srcextra
+	$(LIBGCC) $(EXTRA_PARTS) lang.all.cross @@DOC@@ @GENINSRC@ srcextra
 # This is what must be made before installing GCC and converting libraries.
 start.encap: native xgcc$(exeext) cpp$(exeext) specs \
 	lang.start.encap @GENINSRC@ srcextra
@@ -3655,7 +3655,7 @@
 # Install the driver last so that the window when things are
 # broken is small.
 install: install-common $(INSTALL_HEADERS) $(INSTALL_LIBGCC) \
-    install-cpp install-man install-info install-html install-pdf \
+    install-cpp install-man install-info @@INSTALL_HTML@@ @@INSTALL_PDF@@ \
     install-@POSUB@ lang.install-normal install-driver
 
 # Handle cpp installation.
