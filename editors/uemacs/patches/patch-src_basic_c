$NetBSD: patch-src_basic_c,v 1.1 2012/05/10 20:53:30 dholland Exp $

- don't use implicit int

--- src/basic.c~	2012-05-10 18:57:11.000000000 +0000
+++ src/basic.c
@@ -19,7 +19,7 @@
  * beginning of the current line.
  * Trivial.
  */
-PASCAL NEAR gotobol(f, n)
+int PASCAL NEAR gotobol(f, n)
 
 int f,n;	/* argument flag and num */
 
@@ -34,7 +34,7 @@ int f,n;	/* argument flag and num */
  * location. Error if you try and move out of the buffer. Set the flag if the
  * line pointer for dot changes.
  */
-PASCAL NEAR backchar(f, n)
+int PASCAL NEAR backchar(f, n)
 
 int f,n;	/* prefix flag and argument */
 
@@ -63,7 +63,7 @@ int f,n;	/* prefix flag and argument */
 /*
  * Move the cursor to the end of the current line. Trivial. No errors.
  */
-PASCAL NEAR gotoeol(f, n)
+int PASCAL NEAR gotoeol(f, n)
 
 int f,n;	/* argument flag and num */
 
@@ -78,7 +78,7 @@ int f,n;	/* argument flag and num */
  * location, and move ".". Error if you try and move off the end of the
  * buffer. Set the flag if the line pointer for dot changes.
  */
-PASCAL NEAR forwchar(f, n)
+int PASCAL NEAR forwchar(f, n)
 
 int f,n;	/* prefix flag and argument */
 
@@ -102,7 +102,7 @@ int f,n;	/* prefix flag and argument */
 #endif
 }
 
-PASCAL NEAR gotoline(f, n)	/* move to a particular line.
+int PASCAL NEAR gotoline(f, n)	/* move to a particular line.
 			   argument (n) must be a positive integer for
 			   this to actually do anything		*/
 
@@ -137,7 +137,7 @@ int f,n;	/* prefix flag and argument */
  * considered to be hard motion; it really isn't if the original value of dot
  * is the same as the new value of dot. Normally bound to "M-<".
  */
-PASCAL NEAR gotobob(f, n)
+int PASCAL NEAR gotobob(f, n)
 
 int f,n;	/* argument flag and num */
 
@@ -153,7 +153,7 @@ int f,n;	/* argument flag and num */
  * (ZJ). The standard screen code does most of the hard parts of update.
  * Bound to "M->".
  */
-PASCAL NEAR gotoeob(f, n)
+int PASCAL NEAR gotoeob(f, n)
 
 int f,n;	/* argument flag and num */
 
@@ -170,7 +170,7 @@ int f,n;	/* argument flag and num */
  * controls how the goal column is set. Bound to "C-N". No errors are
  * possible.
  */
-PASCAL NEAR forwline(f, n)
+int PASCAL NEAR forwline(f, n)
 
 int f,n;	/* argument flag and num */
 
@@ -214,7 +214,7 @@ int f,n;	/* argument flag and num */
  * alternate. Figure out the new line and call "movedot" to perform the
  * motion. No errors are possible. Bound to "C-P".
  */
-PASCAL NEAR backline(f, n)
+int PASCAL NEAR backline(f, n)
 
 int f,n;	/* argument flag and num */
 
@@ -253,7 +253,7 @@ int f,n;	/* argument flag and num */
 #endif
 }
 
-PASCAL NEAR gotobop(f, n) /* go back to the beginning of the current paragraph
+int PASCAL NEAR gotobop(f, n) /* go back to the beginning of the current paragraph
 		   here we look for a blank line or a character from
 		   $paralead to delimit the beginning of a paragraph or
 		   $fmtlead to delimit a line before the paragraph */
@@ -319,7 +319,7 @@ int f, n;	/* default Flag & Numeric argu
 	return(TRUE);
 }
 
-PASCAL NEAR gotoeop(f, n) /* go forword to the end of the current paragraph
+int PASCAL NEAR gotoeop(f, n) /* go forword to the end of the current paragraph
 			     looking for a member of $paralead or $fmtlead
 			     or a blank line to delimit the start of the
 			     next paragraph
@@ -433,7 +433,7 @@ register LINE   *dlp;
  * is overlap between screens. This defaults to overlap value in ITS EMACS.
  *  Because this zaps the top line in the window, we have to do a hard update.
  */
-PASCAL NEAR forwpage(f, n)
+int PASCAL NEAR forwpage(f, n)
 
 int f,n;	/* prefix flag and argument */
 
@@ -466,7 +466,7 @@ int f,n;	/* prefix flag and argument */
  * EMACS manual. Bound to "M-V". We do a hard update for exactly the same
  * reason.
  */
-PASCAL NEAR backpage(f, n)
+int PASCAL NEAR backpage(f, n)
 
 register int f;
 register int n;
@@ -498,7 +498,7 @@ register int n;
  * Set the mark in the current window to the value of "." in the window. No
  * errors are possible. Bound to "M-.".
  */
-PASCAL NEAR setmark(f, n)
+int PASCAL NEAR setmark(f, n)
 
 int f,n;	/* argument flag and num */
 
@@ -519,7 +519,7 @@ int f,n;	/* argument flag and num */
  * Remove the mark in the current window.
  * Bound to ^X <space> 
  */
-PASCAL NEAR remmark(f, n)
+int PASCAL NEAR remmark(f, n)
 
 int f,n;	/* argument flag and num */
 
@@ -542,7 +542,7 @@ int f,n;	/* argument flag and num */
  * that moves the mark about. The only possible error is "no mark". Bound to
  * "C-X C-X".
  */
-PASCAL NEAR swapmark(f, n)
+int PASCAL NEAR swapmark(f, n)
 
 int f,n;	/* argument flag and num */
 
@@ -575,7 +575,7 @@ int f,n;	/* argument flag and num */
  * the hard work gets done by the standard routine that moves the mark
  * about. The only possible error is "no mark". Bound to "M-^G".
  */
-PASCAL NEAR gotomark(f, n)
+int PASCAL NEAR gotomark(f, n)
 
 int f, n;	/* default and numeric args */
 
