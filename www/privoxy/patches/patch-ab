$NetBSD: patch-ab,v 1.9 2015/01/15 19:39:16 drochner Exp $

Multiple changes.

1) Remove checks for valid user.
   XXX EXPLAIN WHY.  XXX EXPLAIN UPSTREAM STATUS.

2) Remove apparent Linuxy startup work.
   XXX EXPLAIN WHY.  XXX EXPLAIN UPSTREAM STATUS.

3) When not isntalling a new config file, check in DESTDIR, not the
   real filesystem.  Avoids failing to install the config in DESTDIR
   because it's installed on the host system.

   Not pushed upstream; it's not clear that upstream supports DESTDIR
   at all.

--- GNUmakefile.in.orig	2013-02-05 14:04:11.000000000 +0000
+++ GNUmakefile.in
@@ -809,16 +809,6 @@ install-strip:
 # Perhaps the whole user/group validation should be done here, and simplified.
 PROGRAM_V = Privoxy $(VERSION) $(CODE_STATUS)
 install: CONF_DEST LOG_DEST PID_DEST check_doc GROUP_T
-	@# Quick test for valid USER.
-	@if [ -n "$(USER)" ]; then \
-		$(ID) $(USER) >/dev/null || exit 1;\
-	fi
-	@# Test for valid group. FIXME. USER does not have to belong to GROUP
-	@# for file ownership purposes.
-# 	if [ -n "$(GROUP_T)" ] && [ -n "$(USER)" ] && ! $(GROUPS) $(USER) | $(GREP) "\<$(GROUP_T)\>" >/dev/null; then \
-# 		$(ECHO) Group $(GROUP_T) for User $(USER) is invalid && exit 1 ;\
-# 	fi
-
 	@$(ECHO) "Creating directories, and preparing $(PROGRAM_V) installation"
 	$(CHMOD) $(DIR_MODE) $(MKDIR)
 	@$(MKDIR) $(DESTDIR)$(SBIN_DEST) $(DESTDIR)$(prefix) $(DESTDIR)$(CONF_DEST) \
@@ -886,48 +876,13 @@ install: CONF_DEST LOG_DEST PID_DEST che
 		$(INSTALL) $(INSTALL_T) $$i $(DESTDIR)$(CONF_DEST)/templates ;\
 	done
 
-	@# FIXME: group/user validation is overly convoluted.
-	@# If superuser install ... we require a minimum of group ownership
-	@# of those files the daemon writes to, to be non-root owned.
-	@if [ "`$(ID) |sed 's/(.*//' |sed 's/.*=//'`" = "0" ] ;then\
-		if [ x$(USER) = x ] || [ $(USER) = root ]; then \
-			if [ x$(GROUP) = x ] || [ $(GROUP) = root ]; then \
-				if [ "`$(ID) privoxy`" ] && \
-					$(GROUPS) privoxy | $(SED) 's/^.*://' |$(GREP) "\<privoxy\>" >/dev/null; then \
-					$(ECHO) "Warning: Setting group owner to privoxy";\
-					GROUP_T=privoxy ;\
-				else \
-					$(ECHO)  "******************************************************************" ;\
-					$(ECHO)  " WARNING! WARNING! installing config files as root!" ;\
-					$(ECHO)  " It is strongly recommended to run $(PROGRAM) as a non-root user," ;\
-					$(ECHO)  " and to install the config files as that user and/or group!" ;\
-					$(ECHO)  " Please read INSTALL, and create a privoxy user and group!" ;\
-					$(ECHO)  "*******************************************************************" ;\
-					exit 1 ;\
-				fi ;\
-			else \
-				GROUP_T=$(GROUP) ;\
-			fi ;\
-			INSTALL_CONF="$(INSTALL_R) -g $$GROUP_T " ;\
-		else \
-			$(ECHO) "Superuser install, installing config files as $(USER):$(GROUP_T)" ;\
-			INSTALL_CONF="$(INSTALL_R) -o $(USER) -g $(GROUP_T)" ;\
-			GROUP_T=$(GROUP_T) ;\
-		fi ;\
-	else \
-		if [ ! "`id $(USER)`" = "`id`" ] ;then \
-			$(ECHO) "** WARNING ** current install user different from configured user!!" ;\
-			$(ECHO) "Edit may fail." ;\
-		fi ;\
-		INSTALL_CONF="$(INSTALL_R)" ;\
-	fi ;\
 	$(ECHO) Installing configuration files to $(DESTDIR)$(CONF_DEST);\
 	for i in $(CONFIGS); do \
 		if [ "$$i" = "default.action" ] || [ "$$i" = "default.filter" ] ; then \
 			$(RM) $(DESTDIR)$(CONF_DEST)/$$i ;\
 			$(ECHO) Installing fresh $$i;\
 			$(INSTALL) $$INSTALL_CONF $$i $(DESTDIR)$(CONF_DEST) || exit 1;\
-		elif [ -s "$(CONF_DEST)/$$i" ]; then \
+		elif [ -s "$(DESTDIR)/$(CONF_DEST)/$$i" ]; then \
 			$(ECHO) Installing $$i as $$i.new ;\
 			$(INSTALL) $$INSTALL_CONF $$i $(DESTDIR)$(CONF_DEST)/$$i.new || exit 1;\
 			NEW=1;\
@@ -939,36 +894,6 @@ install: CONF_DEST LOG_DEST PID_DEST che
 		$(CHMOD) $(RWD_MODE) $(DESTDIR)$(CONF_DEST)/*.new || exit 1 ;\
 		$(ECHO) "Warning: Older config files are preserved. Check new versions for changes!" ;\
 	fi ;\
-	[ ! -f $(DESTDIR)$(LOG_DEST)/logfile ] && $(ECHO) Creating logfiles in $(DESTDIR)$(LOG_DEST) || \
-		$(ECHO) Checking logfiles in $(DESTDIR)$(LOG_DEST) ;\
-		$(TOUCH) $(DESTDIR)$(LOG_DEST)/logfile || exit 1 ;\
-	if [ x$$USER != x ]; then \
-		$(CHOWN) $$USER $(DESTDIR)$(LOG_DEST)/logfile || \
-		$(ECHO) "** WARNING ** current install user different from configured user. Logging may fail!!" ;\
-	fi ;\
-	if [ x$$GROUP_T != x ]; then \
-		$(CHGRP) $$GROUP_T $(DESTDIR)$(LOG_DEST)/logfile || \
-		$(ECHO) "** WARNING ** current install user different from configured user. Logging may fail!!" ;\
-	fi ;\
-	$(CHMOD) $(RWD_MODE) $(DESTDIR)$(LOG_DEST)/logfile || exit 1 ;\
-	if [ "$(prefix)" = "/usr/local" ] || [ "$(prefix)" = "/usr" ]; then \
-		if [ -f /etc/slackware-version ] && [ -d /etc/rc.d/ ] && [ -w /etc/rc.d/ ] ; then \
-               $(SED) 's+%PROGRAM%+$(PROGRAM)+' slackware/rc.privoxy.orig | \
-               $(SED) 's+%SBIN_DEST%+$(SBIN_DEST)+' | \
-               $(SED) 's+%CONF_DEST%+$(CONF_DEST)+' | \
-               $(SED) 's+%USER%+$(USER)+' | \
-               $(SED) 's+%GROUP%+$(GROUP_T)+' >slackware/rc.privoxy ;\
-			$(INSTALL) $(INSTALL_P) slackware/rc.privoxy $(DESTDIR)/etc/rc.d/ ;\
-               $(ECHO) "Installing for Slackware." ;\
-               $(ECHO) "Dont forget to add the rc.privoxy to rc.local if you want it started at every boot" ;\
-		elif [ -d $(DESTDIR)/etc/init.d ] && [ -w $(DESTDIR)/etc/init.d ] ; then \
-			$(ECHO) "Installing generic init script to $(DESTDIR)/etc/init.d/privoxy" ;\
-			$(ECHO) "Please check that the PATHs are correct, and edit if needed." ;\
-			$(INSTALL) $(INSTALL_P) privoxy-generic.init $(DESTDIR)/etc/init.d/privoxy ;\
-		fi ;\
-	else \
-		$(ECHO) "No init script installed, install it manually if needed" ;\
-	fi
 	$(RM) config.base config.tmp
 	@# mmmmm, good.
 	@$(ECHO) "$(PROGRAM_V) installation succeeded!"
