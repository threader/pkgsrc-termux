$NetBSD: patch-aj,v 1.3 2011/07/02 22:19:30 dholland Exp $

- fix energizer-bunny-makefiles
- hack around build failure in davlib/ (see pkgsrc Makefile for discussion)

--- Amaya/Makefile.in.orig	2009-09-15 12:41:32.000000000 +0000
+++ Amaya/Makefile.in
@@ -13,7 +13,11 @@ include Options
 LIBWWW	   = libwww
 
 #MKP: adding davlib
-SUBDIRS	= @SUBDIRS@ tools thotlib batch annotlib @DAVDIR@ amaya
+# Does not build this way - you have to do a partial build in amaya/ first.
+# it appears that if you don't recurse into davlib but do enable it, it
+# cross-recurses from amaya/ after building the needed generated files.
+# Sheesh.
+SUBDIRS	= @SUBDIRS@ tools thotlib batch annotlib amaya
 EXTRA_SUBDIRS= $(BUILDRAPTOR) @BUILDLIBWWW@ $(WX_BUILDDIR) $(GL_BUILDDIR)
 
 prefix = @prefix@
@@ -36,44 +40,44 @@ force :
 
 batch: rebuild force
 	@(if test -d batch ; then cd batch ; \
-	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" ; fi)
+	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" ; fi) || exit 1
 
 tools: rebuild force
 	@(if test -d tools ; then cd tools ; \
-	  $(MAKE) CC="$(CC)" CFLAGS="-O -x c" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" all ; fi)
+	  $(MAKE) CC="$(CC)" CFLAGS="-O -x c" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" all ; fi) || exit 1
 
 thotlib: rebuild force
 	@(if test -d thotlib ; then cd thotlib ; \
-	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" all ; fi)
+	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" all ; fi) || exit 1
 
 amaya_prog: rebuild force bin/str
 	@(if test -d amaya ; then cd amaya ; \
-	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" amaya ; fi)
+	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" amaya ; fi) || exit 1
 
 wxwidgets: rebuild force
 	@(if test -d "$(WX_BUILDDIR)" ; then cd "$(WX_BUILDDIR)" ; \
-	  $(MAKE) ; fi)
+	  $(MAKE) ; fi) || exit 1
 
 gl: rebuild force
 	@(if test -d "$(GL_BUILDDIR)" ; then cd "$(GL_BUILDDIR)" ; \
-	  $(MAKE) ; fi)
+	  $(MAKE) ; fi) || exit 1
 
 print_prog: rebuild force bin/str
 	@(if test -d thotlib ; then cd thotlib ; \
-  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" print ; fi)
+  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" print ; fi) || exit 1
 
 all : rebuild
 	@(for dir in $(EXTRA_SUBDIRS) $(SUBDIRS) ;\
 	  do if test -d $$dir ; then cd $$dir ; \
-	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" all ; \
-	  cd .. ; fi ;done )
+	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" all || exit 1; \
+	  cd .. ; fi ;done ) || exit 1
 
 clean : rebuild
 	$(RM) libpng.a libz.a libjpeg.a
 	@(for dir in $(SUBDIRS) $(EXTRA_SUBDIRS) ;\
 	  do if test -d $$dir ; then cd $$dir ; \
-	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" clean ; \
-	  cd .. ; fi ;done )
+	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" clean || exit 1; \
+	  cd .. ; fi ;done ) || exit 1
 
 reallyclean : clean
 	$(RM) config.cache config.h config.log config.status
@@ -86,14 +90,14 @@ tempclean : 
 install : rebuild
 	@(for dir in $(SUBDIRS) ;\
 	  do if test -d $$dir ; then cd $$dir ; \
-	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" install ; \
-	  cd .. ; fi ;done )
+	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" install || exit 1; \
+	  cd .. ; fi ;done ) || exit 1
 
 uninstall : 
 	@(for dir in $(SUBDIRS) ;\
 	  do if test -d $$dir ; then cd $$dir ; \
-	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" uninstall ; \
-	  cd .. ; fi ;done )
+	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" uninstall || exit 1; \
+	  cd .. ; fi ;done ) || exit 1
 
 update :
 	@(cd $(THOTDIR) ; cvs update -dP)
@@ -104,26 +108,26 @@ commit :
 	@(cd $(THOTDIR) ; cvs commit)
 
 tools/mkdep/mkdep :
-	@(cd tools/mkdep ; $(MAKE) CC="$(CC)" CFLAGS="-O -x c" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" mkdep)
+	@(cd tools/mkdep ; $(MAKE) CC="$(CC)" CFLAGS="-O -x c" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" mkdep) || exit 1
 
 depend depends : rebuild tools/mkdep/mkdep
 	@(for dir in $(SUBDIRS) ;\
 	  do if test -d $$dir ; then cd $$dir ; \
-	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" depend ; \
-	  cd .. ; fi ;done )
+	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" depend || exit 1; \
+	  cd .. ; fi ;done ) || exit 1
 
 bin/cextract :
-	@(cd tools/cextract-$(CEXTRACT_VER) ; $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" cextract)
+	@(cd tools/cextract-$(CEXTRACT_VER) ; $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" cextract) || exit 1
 
 proto : rebuild bin/cextract
 	@(for dir in $(SUBDIRS) ;\
 	  do if test -d $$dir ; then cd $$dir ; \
-	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" proto ; \
-	  cd .. ; fi ;done )
+	  $(MAKE) CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" proto || exit 1; \
+	  cd .. ; fi ;done ) || exit 1
 
 mkid : 
 	@(echo rebuilding $(THOTDIR)/ID reference file)
-	@(cd $(THOTDIR); mkid --lang-map=makes/id-lang.map . classes/org/w3c/*)
+	@(cd $(THOTDIR); mkid --lang-map=makes/id-lang.map . classes/org/w3c/*) || exit 1
 
 #
 # Rules to rebuild the libWWW package
